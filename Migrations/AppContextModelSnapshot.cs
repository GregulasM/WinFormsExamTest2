// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormsExamTest2;

#nullable disable

namespace WinFormsExamTest2.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("WinFormsExamTest2.Клиент", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Возраст")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Имя")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ОфисId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Фамилия")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ОфисId");

                    b.ToTable("Клиенты");
                });

            modelBuilder.Entity("WinFormsExamTest2.Офис", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Город")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Название")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Офисы");
                });

            modelBuilder.Entity("WinFormsExamTest2.Товар", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Кодификатор")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Название")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Товары");
                });

            modelBuilder.Entity("ОфисТовар", b =>
                {
                    b.Property<int>("ОфисыId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ТоварыId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ОфисыId", "ТоварыId");

                    b.HasIndex("ТоварыId");

                    b.ToTable("ОфисТовар");
                });

            modelBuilder.Entity("WinFormsExamTest2.Клиент", b =>
                {
                    b.HasOne("WinFormsExamTest2.Офис", "Офис")
                        .WithMany("Клиенты")
                        .HasForeignKey("ОфисId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Офис");
                });

            modelBuilder.Entity("ОфисТовар", b =>
                {
                    b.HasOne("WinFormsExamTest2.Офис", null)
                        .WithMany()
                        .HasForeignKey("ОфисыId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsExamTest2.Товар", null)
                        .WithMany()
                        .HasForeignKey("ТоварыId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormsExamTest2.Офис", b =>
                {
                    b.Navigation("Клиенты");
                });
#pragma warning restore 612, 618
        }
    }
}
